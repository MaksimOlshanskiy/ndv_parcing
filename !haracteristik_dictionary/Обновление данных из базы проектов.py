import pandas as pd
import json
import os
import numpy as np

def normalize_value(v):
    """–ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –∫ –µ–¥–∏–Ω–æ–º—É –≤–∏–¥—É –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è"""
    if pd.isna(v):   # NaN -> None
        return None
    if isinstance(v, str):
        return v.strip()  # —É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã
    if isinstance(v, (np.int64, np.float64)):
        # –µ—Å–ª–∏ —á–∏—Å–ª–æ –±–µ–∑ –¥—Ä–æ–±–Ω–æ–π —á–∞—Å—Ç–∏ -> int
        if float(v).is_integer():
            return int(v)
        return float(v)
    return v

# –∑–∞–≥—Ä—É–∂–∞–µ–º Excel
df = pd.read_excel(r"\\192.168.252.25\–∞–Ω–∞–ª–∏—Ç–∏–∫–∏\–û–¢–ß–ï–¢–´\–ë–∞–∑–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤.xlsx")

# —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü-–∫–ª—é—á = –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ + "_" + –î–µ–≤–µ–ª–æ–ø–µ—Ä
df["primary_key"] = df["–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞"].astype(str).str.strip() + "_" + df["–î–µ–≤–µ–ª–æ–ø–µ—Ä"].astype(str).str.strip()

# –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –≤ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–µ
try:
    df = df.map(normalize_value)  # pandas >= 2.2
except AttributeError:
    df = df.applymap(normalize_value)  # —Å—Ç–∞—Ä—ã–µ –≤–µ—Ä—Å–∏–∏ pandas

df['id'] = df['id'].astype(str).str.replace(".0", "")

# —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å –∏–∑ Excel
projects_dict = df.set_index("primary_key").drop(columns=["–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞", "–î–µ–≤–µ–ª–æ–ø–µ—Ä"]).to_dict(orient="index")

# —á–∏—Ç–∞–µ–º —Å—Ç–∞—Ä—ã–π JSON (–µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
old_projects = {}
if os.path.exists("projects.json"):
    with open("projects.json", "r", encoding="utf-8") as f:
        old_projects = json.load(f)

# —Å—á–∏—Ç–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
new_count = 0
updated_projects_count = 0
updated_cells_count = 0

for key, new_values in projects_dict.items():
    if key not in old_projects:
        new_count += 1
    else:
        old_values = {k: normalize_value(v) for k, v in old_projects[key].items()}
        changes_in_project = 0
        for col, new_val in new_values.items():
            old_val = old_values.get(col)
            if old_val != new_val:
                updated_cells_count += 1
                changes_in_project += 1
        if changes_in_project > 0:
            updated_projects_count += 1

# —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π JSON
with open("projects.json", "w", encoding="utf-8") as f:
    json.dump(projects_dict, f, ensure_ascii=False, indent=4)

print(f"‚úÖ –ù–æ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω–æ: {new_count}")
print(f"üîÅ –ü—Ä–æ–µ–∫—Ç–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {updated_projects_count}")
print(f"üîÅ –Ø—á–µ–µ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {updated_cells_count}")
print(f"‚úÖ –í—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ –±–∞–∑–µ: {len(projects_dict)}")