import pandas as pd
import json
import os

# —á–∏—Ç–∞–µ–º —Ñ–∞–π–ª
df = pd.read_excel(r"\\192.168.252.25\–∞–Ω–∞–ª–∏—Ç–∏–∫–∏\–û–¢–ß–ï–¢–´\–ë–∞–∑–∞ –∏–∑–º–µ–Ω—è–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ.xlsx")

# —É–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –ø–æ –∫–ª—é—á–∞–º
df = df.drop_duplicates(subset=["–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞", "–î–µ–≤–µ–ª–æ–ø–µ—Ä", "–ö–æ—Ä–ø—É—Å", "–î–æ–≥–æ–≤–æ—Ä"])

# –ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ä—ã–π JSON (–µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å)
if os.path.exists("projects.json"):
    with open("projects.json", "r", encoding="utf-8") as f:
        old_result = json.load(f)
else:
    old_result = {}

new_result = dict(old_result)  # –∫–æ–ø–∏—è, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–ª—è—Ç—å

# —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
stats = {
    "projects_added": 0,
    "projects_updated": 0,
    "corpus_added": 0,
    "corpus_updated": 0
}

for _, row in df.iterrows():
    project_key = f"{row['–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞']}_{row['–î–µ–≤–µ–ª–æ–ø–µ—Ä']}"
    corpus = str(row['–ö–æ—Ä–ø—É—Å'])
    srok = str(row['–°—Ä–æ–∫ —Å–¥–∞—á–∏'])
    stage = str(row['–°—Ç–∞–¥–∏—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏'])
    ddu = str(row['–î–æ–≥–æ–≤–æ—Ä'])

    # –µ—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç –Ω–æ–≤—ã–π
    if project_key not in new_result:
        new_result[project_key] = {
            corpus: {"–°—Ä–æ–∫ —Å–¥–∞—á–∏": srok, "–°—Ç–∞–¥–∏—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏": stage, "–î–æ–≥–æ–≤–æ—Ä": ddu}
        }
        stats["projects_added"] += 1
        stats["corpus_added"] += 1
        continue

    # –µ—Å–ª–∏ –∫–æ—Ä–ø—É—Å –Ω–æ–≤—ã–π
    if corpus not in new_result[project_key]:
        new_result[project_key][corpus] = {
            "–°—Ä–æ–∫ —Å–¥–∞—á–∏": srok,
            "–°—Ç–∞–¥–∏—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏": stage,
            "–î–æ–≥–æ–≤–æ—Ä": ddu
        }
        stats["corpus_added"] += 1
        stats["projects_updated"] += 1
        continue

    # –µ—Å–ª–∏ –∫–æ—Ä–ø—É—Å –µ—Å—Ç—å, –Ω–æ –¥–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å
    old_data = new_result[project_key][corpus]
    if old_data["–°—Ä–æ–∫ —Å–¥–∞—á–∏"] != srok or old_data["–°—Ç–∞–¥–∏—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏"] != stage:
        new_result[project_key][corpus]["–°—Ä–æ–∫ —Å–¥–∞—á–∏"] = srok
        new_result[project_key][corpus]["–°—Ç–∞–¥–∏—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏"] = stage
        new_result[project_key][corpus]["–î–æ–≥–æ–≤–æ—Ä"] = ddu
        stats["corpus_updated"] += 1
        stats["projects_updated"] += 1

# —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π JSON
with open("projects.json", "w", encoding="utf-8") as f:
    json.dump(new_result, f, ensure_ascii=False, indent=4)

# –≤—ã–≤–æ–¥–∏–º –ª–æ–≥–∏
print("=== –ò–∑–º–µ–Ω—è–µ–º—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ ===")
print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤: {stats['projects_added']}")
print(f"üîÅ –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤: {stats['projects_updated']}")
print(f"üîÅ –î–æ–±–∞–≤–ª–µ–Ω–æ –∫–æ—Ä–ø—É—Å–æ–≤: {stats['corpus_added']}")
print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∫–æ—Ä–ø—É—Å–æ–≤: {stats['corpus_updated']}")