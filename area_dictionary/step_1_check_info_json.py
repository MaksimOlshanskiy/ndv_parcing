import os
import json
import shutil
import pandas as pd
import pyxlsb

pd.set_option('display.max_rows', None)
pd.set_option('display.max_columns', None)
pd.set_option('display.width', None)

# –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø—É—Ç–∏
path = os.path.join('projects')
failed_dir = os.path.join('failed')
os.makedirs(failed_dir, exist_ok=True)

# –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
all_dicts = {}
failed_files = []  # (–∏–º—è —Ñ–∞–π–ª–∞, –ø—Ä–∏—á–∏–Ω–∞)
failed_paths = []

# –í–æ–∑–º–æ–∂–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ª–∏—Å—Ç–æ–≤
tried_sheets = [
    '—Ç–∏–ø–æ–ª–æ–≥–∏—è', '—Ç–∏–ø.', '–¢–∏–ø–æ–ª–æ–≥–∏—è', '–∫–æ–º–Ω–∞—Ç–Ω–æ—Å—Ç—å',
    '—Ç–∏–ø–æ–ª–æ–≥–∏—è ', '—Ç–∏–ø–æ–ª–æ–≥–∏—è –Ω–æ–≤–∞—è', '—Ç–∏–ø–æ–ª–æ–≥–∏—è_–∞–±—Å', '—Ç–∏–ø–æ–ª–æ–≥–∏—è_–Ω–æ–≤–∞—è', '—Ç–∏–ø','—Ç–∏–ø–æ–ª–æ–≥–∏—è_–ë–µ–≥2'
]

def process_excel_file(file_path):
    file_name = os.path.basename(file_path)
    file_dict_key = os.path.splitext(file_name)[0]

    for i, sheet in enumerate(tried_sheets):
        try:
            df = pd.read_excel(file_path, sheet_name=sheet, usecols="A:B", header=None)
            df = df.dropna(how='all')
            df = df.dropna(subset=[df.columns[0], df.columns[1]])

            if not df.empty:
                keys = df.iloc[:, 0].astype(str).str.strip()
                values = df.iloc[:, 1]
                file_dict = dict(zip(keys, values))
                all_dicts[file_dict_key] = file_dict
                print(f'‚úÖ –£—Å–ø–µ—à–Ω–æ —Å—á–∏—Ç–∞–Ω: {file_name} (–ª–∏—Å—Ç "{sheet}")')
            break

        except ValueError:
            if i == len(tried_sheets) - 1:
                try:
                    sheets = pd.ExcelFile(file_path).sheet_names
                    msg = f'–õ–∏—Å—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –î–æ—Å—Ç—É–ø–Ω—ã–µ: {", ".join(sheets)}'
                    print(f'‚ùå {file_name}: {msg}')
                    failed_files.append((file_name, msg))
                    failed_paths.append(file_path)
                except Exception as ex:
                    msg = f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –ª–∏—Å—Ç–æ–≤: {ex}'
                    print(f'‚ö†Ô∏è {file_name}: {msg}')
                    failed_files.append((file_name, msg))
                    failed_paths.append(file_path)

        except Exception as e:
            msg = f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ª–∏—Å—Ç–∞ "{sheet}": {e}'
            print(f'‚ö†Ô∏è {file_name}: {msg}')
            failed_files.append((file_name, msg))
            failed_paths.append(file_path)
            break

# –ü–æ–∏—Å–∫ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ Excel-—Ñ–∞–π–ª–æ–≤
if os.path.isdir(path):
    for fname in os.listdir(path):
        if fname.lower().endswith(('.xlsx', '.xlsb')):
            fpath = os.path.join(path, fname)
            if os.path.isfile(fpath):
                process_excel_file(fpath)
else:
    print(f'‚ùå –£–∫–∞–∑–∞–Ω–Ω—ã–π –ø—É—Ç—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {path}')

# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
output_path = 'typology.json'
if all_dicts:
    with open(output_path, 'w', encoding='utf-8') as f:
        json.dump(all_dicts, f, ensure_ascii=False, indent=4)
    print(f'\n‚úÖ –í—Å–µ —Å–ª–æ–≤–∞—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ "{output_path}"')
else:
    print('\n‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.')

# –ü–µ—Ä–µ–º–µ—â–∞–µ–º –Ω–µ—É–¥–∞—á–Ω—ã–µ —Ñ–∞–π–ª—ã
for fpath in failed_paths:
    try:
        shutil.move(fpath, os.path.join(failed_dir, os.path.basename(fpath)))
        print(f'üì¶ –ü–µ—Ä–µ–º–µ—â—ë–Ω: {os.path.basename(fpath)} ‚Üí {failed_dir}')
    except Exception as e:
        print(f'‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å —Ñ–∞–π–ª {fpath}: {e}')

# –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á—ë—Ç
if failed_files:
    print('\n‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ —Ñ–∞–π–ª—ã:')
    for fname, reason in failed_files:
        print(f'‚ùå {fname}: {reason}')
